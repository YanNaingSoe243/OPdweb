// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace OPdWebApp.OPDInfo
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using OPdWebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using OPdWebApp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using OPdWebApp.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using OPdWebApp.OPDInfo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using OPdWebApp.ExprotService;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using OPdWebApp.BarCodeReader;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Blazored.LocalStorage;

#line default
#line hidden
#nullable disable
#nullable restore
#line 19 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using AutoMapper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 21 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\OPDInfo\OPDPage.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(OPDLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/opdpage")]
    public partial class OPDPage : PatitentsComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 202 "D:\Project\konaymyoag\OPdWebApp\OPdWebApp\OPDInfo\OPDPage.razor"
       


    private List<ReportDaily> ReporstdailyList = new List<ReportDaily>();
    [Inject]
    public Blazor.DownloadFileFast.Interfaces.IBlazorDownloadFileService BlazorDownloadFileService { get; set; }
    int account = 1;
    protected IEnumerable<Patient> patients { get; set; }
    protected override async Task OnInitializedAsync()
    {

        await load();

    }
    //protected override async Task OnAfterRenderAsync(bool firstRender)
    //{
    //    if (firstRender)
    //        await JSRuntime.InvokeVoidAsync("sayHi", ActiveItem);
    //}

    protected async Task ChangePageSize(ChangeEventArgs e)
    {
        pagesize = Convert.ToInt32(e.Value);
        //await Load();
    }
    int pageindx = 1;
    int pagesize = 20;
    private string error;

    public   async Task load()
    {

        try
        {

            patients = await repositoryt.patient.GetAsync(pageindx, pagesize);

        }
        catch (Exception ex)
        {
            error = ex.Message;
        }





    }
    private string searchTerm;
    protected string SearchTerm
    {
        get { return searchTerm; }
        set { searchTerm = value; Search(); }
    }
    protected async void Search()
    {
        if (searchTerm != "")
        {
            var   Person_obj = await repositoryt.persons.GetAsync(searchTerm,0);
            if(Person_obj.Count()>0)
            {
                List<Patient> vpatientlist = new List<Patient>();
                foreach(VirtualPerson p in Person_obj)
                {
                    var patientobj= await repositoryt.patient.GetAsync(p.PId,1);
                    vpatientlist.AddRange(patientobj);
                }

                patients = vpatientlist;
            }
        }
        else
        {
            pageindx = 1;
            patients = await repositoryt.patient.GetAsync(pageindx, pagesize);
        }

        StateHasChanged();

    }

    void report()
    {

        ReporstdailyList = patients.Where(obj => obj.RegisterDate == DateTime.Now).GroupBy(n => n.PId.Gender)
              .Select(n => new ReportDaily
              {
                  Name = n.First().PId.Gender.ToString(),
                  Account = n.Count()
              }).ToList();


        //var malereport = persons.Where(obj => obj.patients.Last().RegisterDate == DateTime.Today).GroupBy(n => n.Regiment)
        //     .Select(n => new ReportDaily
        //     {
        //         Name = n.First().Regiment,
        //         Account = n.Count()
        //     }).ToList();
        //  ReporstdailyList.AddRange(malereport);



    }
    protected void EditPerson(Patient p)
    {


        addPatiten.EditPerson(p);


    }
    public async System.Threading.Tasks.Task AddData(Patient data)
    {
        try
        {

            if (data != null)
            {


                //  load();

                var obj = patients.FirstOrDefault(obj => obj.OId == data.OId);
                if (obj != null)
                {
                    var ilist = patients.ToList();
                    ilist.Remove(obj);

                    //patients = patients.Except(obj).ToList();

                    patients = ilist;
                }




                //var obj = patients.Where(obj => obj.OId == data.OId);

                //patients = patients.Except(obj).ToList();
                //var ilist = patients.ToList();
                //ilist.Add(data);
                //patients = ilist.ToList();
                //if (obj != null)
                //{
                //    obj = data;
                //    //.CreateAsync(data);
                //}
                //else
                //{
                //    var ilist = patients.ToList();
                //    ilist.Add(data);
                //    patients = ilist.ToList();
                //    // service.CreateAsync(data);

                //}



            }


        }
        catch (Exception Ex)
        {
            //NotificationService.Notify(NotificationSeverity.Error, $"Error", $"Unable to create new Branch!");
        }
        finally
        {
            var ilist = patients.ToList();
            ilist.Add(data);
            patients = ilist.ToList();
            report();
            // StateHasChanged();
        }
        StateHasChanged();

    }
    bool upload = false;

    private Task<IJSObjectReference> _module;
    private Task<IJSObjectReference> Module => _module ??= JS.InvokeAsync<IJSObjectReference>("import", "./js/webcam.js").AsTask();
    ElementReference ActiveItem;
    public async Task OnScroll()
    {
        var module = await Module;
        await module.InvokeAsync<String>("sayHi", ActiveItem, DotNetObjectReference.Create(this));



    }
    [JSInvokable]
    public async void ScrollDataLoad(string  _upload)
    {
        if(_upload=="true")
        {
            try
            {
                upload = true;
                pageindx++;
                var obj = await repositoryt.patient.GetAsync(pageindx, pagesize);

                var ilist = patients.ToList();
                ilist.AddRange(obj);
                patients = ilist.ToList();
                StateHasChanged();
            }
            catch (Exception Ex)
            {
                upload = false;
                // NotificationService.Notify(NotificationSeverity.Error, $"Error", $"Unable to create new Branch!");
            }
            finally
            {
                upload = false;
            }
        }

    }
    public async Task ExportToExcel()
    {
        if (patients.Count() > 0)
        {
            var stream = exportService.ToExcel(patients.AsQueryable().Select(obj => new { QRCode = obj.PId, obj.PId.FullName, obj.PId.NRC, obj.PId.Gender, }));
            var task = await BlazorDownloadFileService.DownloadFileAsync("Export.xlsx", stream, "application/octet-stream");
        }
    }
    class ReportDaily
    {
        public string Name { get; set; }
        public int Account { get; set; }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JS { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IRepositoryT repositoryt { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ExportService exportService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
