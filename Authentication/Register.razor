@page "/register"
@inject NavigationManager UriHelper
@inject IRepositoryT repositoryt
@inject IAuthenticationService  authentication
@inject NotificationService notificationService
<div class="container">
    <div class="row py-5 mt-4 align-items-center">

        <div class="col-md-6 pr-lg-5 mb-5 mb-md-0">
            <img src="css/img/Login2.png" alt="" class="img-fluid mb-3 d-none d-md-block" />
            @* <img src="https://bootstrapious.com/i/snippets/sn-registeration/illustration.svg" alt="" class="img-fluid mb-3 d-none d-md-block">*@
            <h1>Create an Account</h1>
            @*  <p class="font-italic text-muted mb-0">Tele-medicine and  AI  Medical Diagnosis in Picture Archiving and Communication System (AI-PACS)   </p>*@
            <p class="font-italic text-muted">
                Create By <a href="#" class="text-muted">
                    <u>Yan Naing Soe & Kyaw Min Thu</u>
                </a>
            </p>
        </div>

        <!-- Registeration Form -->
        <div class="col-md-7 col-lg-6 ml-auto">
            <EditForm Model="@registerModel" OnValidSubmit="RegisterAccount">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                @*<ValidationSummary/>*@
                <div class="row">
                    <div class="input-group col-lg-12 mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white px-4 border-md border-right-0">
                            </span>
                        </div>
                        <input @bind-value="@registerModel.FullName" name="email" placeholder="Full Name" class="form-control bg-white border-left-0 border-md">

                    </div>

                    <div class="input-group col-lg-12 mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white px-4 border-md border-right-0">
                                <i class="oi oi-envelope-closed text-muted"></i>
                            </span>
                        </div>
                        <input id="email" @bind-value="@registerModel.Email" type="email" name="email" placeholder="Email Address" class="form-control bg-white border-left-0 border-md">

                    </div>


                    <!-- Job -->
                    <div class="input-group col-lg-12 mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white px-4 border-md border-right-0">

                                <i class="oi  oi-grid-four-up text-muted"></i>
                            </span>
                        </div>
                        @if (departments != null)
                        {
                            @if (departments.Count() > 0)
                            {
                                <select name="jobtitle" class="form-control custom-select bg-white border-left-0 border-md" @bind="@registerModel.department">
                                    <option value="null">Select Department </option>
                                    @foreach (Department obj in departments)
                                    {
                                        <option value="@obj.Name">@obj.Name</option>
                                    }
                                </select>
                            }


                        }
                        @*else
                            {
                                <select name="jobtitle" class="form-control custom-select bg-white border-left-0 border-md">
                                    <option value="">Choose your Department</option>
                                    <option value="">Designer</option>
                                    <option value="">Developer</option>
                                    <option value="">Manager</option>
                                    <option value="">Accountant</option>
                                </select>
                            }*@

                    </div>

                    <!-- Password -->
                    <div class="input-group col-lg-6 mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white px-4 border-md border-right-0">
                                <i class="oi oi-lock-locked text-muted"></i>
                            </span>
                        </div>
                        <input id="password" @bind-value="@registerModel.Password" type="password" name="password" placeholder="Password" class="form-control bg-white border-left-0 border-md">


                    </div>

                    <!-- Password Confirmation -->
                    <div class="input-group col-lg-6 mb-4">
                        <div class="input-group-prepend">
                            <span class="input-group-text bg-white px-4 border-md border-right-0">
                                <i class="oi oi-lock-locked text-muted"></i>
                            </span>
                        </div>
                        <input id="passwordConfirmation" @bind-value="@registerModel.ConfirmPassword" type="password" name="passwordConfirmation" placeholder="Confirm Password" class="form-control bg-white border-left-0 border-md">


                    </div>

                    <!-- Submit Button -->
                    <div class="form-group col-lg-12 mx-auto mb-0">
                        <button class="btn btn-primary btn-block py-2" style="background-color: #660080" @onclick="RegisterAccount">
                            <span class="font-weight-bold" style="color:white">Create your account</span>
                        </button>
                    </div>

                    <!-- Divider Text -->
                    <div class="form-group col-lg-12 mx-auto d-flex align-items-center my-4">
                        <div class="border-bottom w-100 ml-5"></div>
                        <span class="px-2 small text-muted font-weight-bold text-muted">OR</span>
                        <div class="border-bottom w-100 mr-5"></div>
                    </div>

                    <!-- Social Login -->
                    <!--<div class="form-group col-lg-12 mx-auto">
                        <a href="#" class="btn btn-primary btn-block py-2 btn-facebook">
                            <i class="fa fa-facebook-f mr-2"></i>
                            <span class="font-weight-bold">Continue with Facebook</span>
                        </a>
                        <a href="#" class="btn btn-primary btn-block py-2 btn-twitter">
                            <i class="fa fa-twitter mr-2"></i>
                            <span class="font-weight-bold">Continue with Twitter</span>
                        </a>
                    </div>-->
                    <!-- Already Registered -->
                    <div class="text-center w-100">
                        <p class="text-muted font-weight-bold">Already Registered? <a href="login" class="text-primary ml-2">Sign In</a></p>
                    </div>
                    @if (!string.IsNullOrEmpty(error))
                    {
                        <div class="alert alert-danger mt-3 mb-0 text-center w-100">
                            @error
                            <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
                            <ValidationMessage For="@(() => registerModel.Password)" />
                            <ValidationMessage For="@(() => registerModel.Email)" />
                        </div>
                    }
                </div>
                @if (!string.IsNullOrEmpty(error))
                {
                    <div class="alert alert-danger mt-3 mb-0">@error</div>
                }
            </EditForm>
        </div>
    </div>
</div>
@code{
    SiginUp registerModel { get; set; }
    protected IEnumerable<Department> departments { get; set; }

    private string error;
    protected override async Task OnInitializedAsync()
    {
        //if (AuthenticationService.User != null)
        //{
        //    NavigationManager.NavigateTo("");
        //}
        registerModel = new SiginUp();
        departments = await repositoryt.persons.GetDepart();

        StateHasChanged();
    }
    private async void RegisterAccount()
    {
        // loading = true;
        try
        {

            LoginResult r = await authentication.Register(registerModel);
            if (r.email != "")
            {
                await Task.Run(() => { UriHelper.NavigateTo("accountsucces"); });
            }
            //await AuthenticationService.Login(model.Username, model.Password);
            //var returnUrl = NavigationManager.QueryString("returnUrl") ?? "/";
            //NavigationManager.NavigateTo(returnUrl);
        }
        catch (Exception ex)
        {
            error = ex.Message;
            notificationService.Notify(new NotificationMessage { Style = "position: fixed;bottom: 0px; ", Severity = NotificationSeverity.Error, Summary = "Success Summary", Detail =error, Duration = 2000 });
            StateHasChanged();
        }

    }
}